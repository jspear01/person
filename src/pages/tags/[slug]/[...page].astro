---
import type { GetStaticPathsOptions, Page } from 'astro';
import { type CollectionEntry, getCollection } from 'astro:content';
import BaseLayout from '../../../layouts/BaseLayout.astro';
import Pagination from '../../../components/Pagination.astro';
import PostPreview from '../../../components/PostPreview.astro';
import siteConfig from '../../../data/site-config';
import { sortItemsByDateDesc, getAllTags, getPostsByTag } from '../../../utils/data-utils';

export async function getStaticPaths({ paginate }: GetStaticPathsOptions) {
    const posts = (await getCollection('blog')).sort(sortItemsByDateDesc);
    const projects = (await getCollection('projects')).sort(sortItemsByDateDesc);
    const tags = getAllTags(posts, projects);

    return tags.flatMap((tag) => {
        const filteredPosts = getPostsByTag(posts, projects, tag.slug);
        return paginate(filteredPosts, {
            params: { slug: tag.slug },
            pageSize: siteConfig.postsPerPage || 4
        });
    });
}

type Props = { page: Page<CollectionEntry<'blog'>> };

const { page } = Astro.props;
const blog = page.data;
const params = Astro.params;
const allPosts = await getCollection('blog');
const allProjects = await getCollection('projects');
const allTags = getAllTags(allPosts, allProjects);
const currentTag = allTags.find((tag) => {
    return tag.slug === params.slug;
});
---

<BaseLayout
    title={`Posts and Projects Tagged ${currentTag?.name}`}
    description={`Explore a curated collection of blog posts and projects under ${currentTag?.name}`}
    image={{ src: '/preview.png', alt: 'The preview of the site' }}
    showHeader={false}
>
    <h1 class="mb-12 text-2xl leading-tight font-serif italic sm:mb-16 sm:text-4xl">Posts and Projects Tagged "{currentTag?.name}"</h1>
    {blog.map((post) => <PostPreview post={post} class="mb-10 sm:mb-12" />)}
    <Pagination page={page} class="my-16 sm:my-24" />
</BaseLayout>
